function o(e){if(typeof e=="function"&&(e={highlight:e}),!e||typeof e.highlight!="function")throw new Error("Must provide highlight function");return typeof e.langPrefix!="string"&&(e.langPrefix="language-"),typeof e.emptyLangClass!="string"&&(e.emptyLangClass=""),{async:!!e.async,walkTokens(t){if(t.type!=="code")return;const n=s(t.lang);if(e.async)return Promise.resolve(e.highlight(t.text,n,t.lang||"")).then(g(t));const a=e.highlight(t.text,n,t.lang||"");if(a instanceof Promise)throw new Error("markedHighlight is not set to async but the highlight function is async. Set the async option to true on markedHighlight to await the async highlight function.");g(t)(a)},useNewRenderer:!0,renderer:{code(t,n,a){typeof t=="object"&&(a=t.escaped,n=t.lang,t=t.text);const r=s(n),c=r?e.langPrefix+l(r):e.emptyLangClass,h=c?` class="${c}"`:"";return t=t.replace(/\n$/,""),`<pre><code${h}>${a?t:l(t,!0)}
</code></pre>`}}}}function s(e){return(e||"").match(/\S*/)[0]}function g(e){return t=>{typeof t=="string"&&t!==e.text&&(e.escaped=!0,e.text=t)}}const f=/[&<>"']/,p=new RegExp(f.source,"g"),u=/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,y=new RegExp(u.source,"g"),x={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},i=e=>x[e];function l(e,t){if(t){if(f.test(e))return e.replace(p,i)}else if(u.test(e))return e.replace(y,i);return e}export{o as m};
