/*!
 * 
 *     MCAFEE RESTRICTED CONFIDENTIAL
 *     Copyright (c) 2025 McAfee, LLC
 *
 *     The source code contained or described herein and all documents related
 *     to the source code ("Material") are owned by McAfee or its
 *     suppliers or licensors. Title to the Material remains with McAfee
 *     or its suppliers and licensors. The Material contains trade
 *     secrets and proprietary and confidential information of McAfee or its
 *     suppliers and licensors. The Material is protected by worldwide copyright
 *     and trade secret laws and treaty provisions. No part of the Material may
 *     be used, copied, reproduced, modified, published, uploaded, posted,
 *     transmitted, distributed, or disclosed in any way without McAfee's prior
 *     express written permission.
 *
 *     No license under any patent, copyright, trade secret or other intellectual
 *     property right is granted to or conferred upon you by disclosure or
 *     delivery of the Materials, either expressly, by implication, inducement,
 *     estoppel or otherwise. Any license under such intellectual property rights
 *     must be expressed and approved by McAfee in writing.
 *
 */(()=>{"use strict";const e=0,t="PRINT_IN_BACKGROUND",s={NONE:0,INFO:1,ERROR:2,WARN:3,DEBUG:4,ALL_IN_BACKGROUND:99},o=1,n=2,i=3,r=4,c={BACKGROUND:"BACKGROUND",CONTENT:"CONTENT",TELEMETRY:"TELEMETRY"},a={DEFAULT:"color: #000000; font-weight: normal; font-style:normal; background: #FFFFFF;",BACKGROUND:"color: #8D0DBA; font-weight: bold; background: #FFFFFF;",CONTENT:"color: #F54A26; font-weight: bold; background: #FFFFFF;",TELEMETRY:"color: #147831; font-weight: bold; background: #FFFFFF;"};const l=new class{constructor(){this.storageChecked=!1,this.logLevel=null,this.queue=[];const t="MCLOGLEVEL";chrome?.storage?.local.get([t]).then((o=>{const n=Object.values(s).includes(o[t]);this.logLevel=n?o[t]:e,this.logLevel!==s.NONE&&this.queue.forEach((({callback:e,message:t,processType:s})=>{e(t,s)})),this.queue=[],this.storageChecked=!0}))}log(e,t=null){this.storageChecked?this.processLog(e,o,t,this.logLevel):this.queue.push({callback:this.log.bind(this),message:e,processType:t})}error(e,t=null){this.storageChecked?this.processLog(e,n,t,this.logLevel):this.queue.push({callback:this.error.bind(this),message:e,processType:t})}warn(e,t=null){this.storageChecked?this.processLog(e,i,t,this.logLevel):this.queue.push({callback:this.warn.bind(this),message:e,processType:t})}debug(e,t=null){this.storageChecked?this.processLog(e,r,t,this.logLevel):this.queue.push({callback:this.debug.bind(this),message:e,processType:t})}processLog(e,o,i,r){if(r===s.NONE)return;let a="chrome-extension:"===location.protocol?c.BACKGROUND:c.CONTENT;i&&c[i]&&(a=i);const l=this.formatDateWithMilliseconds(new Date),d=o===n?e:`%c[${a} ${l} ]: %c${e}`;a===c.CONTENT&&this.logLevel===s.ALL_IN_BACKGROUND&&chrome.runtime.sendMessage({command:t,logMessage:d,processType:a,logType:o,logLevel:r}),this.printLog(d,a,o,r)}formatDateWithMilliseconds(e){return`${new Intl.DateTimeFormat("en-US",{hour:"2-digit",minute:"2-digit",second:"2-digit",hour12:!0}).format(e)}.${e.getMilliseconds().toString().padStart(3,"0")}`}printLog(e,t,c,l){const d=a.DEFAULT,h=a[t]||d;if(l>=s.ERROR&&c===n&&console.error(e),l>=s.INFO&&c===o&&console.log(e,h,d),l>=s.WARN&&c===i){const t="color: #FFA500; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;";console.log(`%cWARN - ${e}`,t,h,d)}if(l>=s.DEBUG&&c===r){const t="color: #FF33D7; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;";console.log(`%cDEBUG - ${e}`,t,h,d)}}};class d{constructor(e){this.pingCommand=e,this.basePingListener(),this.addIdentifier()}basePingListener(e=null){((e,t=null,s)=>{"function"==typeof s?chrome.runtime.onMessage.addListener(((o,n,i)=>{if(n.id===chrome.runtime.id&&"object"==typeof o&&!Array.isArray(o)&&o?.ipcId===e)return s({promises:t,request:o,sender:n,sendResponse:i})})):l.error("Provided with invalid callback function")})("WA",null,(({request:t,sendResponse:s})=>{const{command:o}=t;if(o===this.pingCommand)return l.debug(`File Injection [pinged]: Received ${o} command`),s({content:!0}),"function"==typeof e&&e(),!0}))}addIdentifier(){var e;e=()=>{const e=document.createElement("span");e.id=this.pingCommand,e.style.cssText="display:none",document.body.appendChild(e)},"undefined"!=typeof document&&null!==document&&("complete"===document.readyState||"loading"!==document.readyState&&!document.documentElement.doScroll?e():document.addEventListener("DOMContentLoaded",e))}}class h{constructor(){this.observer=null,this.clientNotified=!1,this.autoplayDetectedFn=null}_recursiveProcess(e){for(let t=0;t<e.childNodes.length;++t){if(this.clientNotified)return;this._recursiveProcess(e.childNodes[t])}if(e instanceof HTMLMediaElement){if(this.clientNotified)return;e.autoplay&&(this.clientNotified=!0,this.autoplayDetectedFn(e))}}init(e){this.autoplayDetectedFn=e,this.observer=new MutationObserver(this.handleMutations.bind(this)),this.observer.observe(document,{childList:!0,subtree:!0});const t=document.querySelectorAll("audio, video");for(let e=0;e<t.length&&!this.clientNotified;++e)t[e].autoplay&&t[e].currentSrc&&(this.clientNotified=!0,this.autoplayDetectedFn(t[e].src))}handleMutations(e){e.forEach((e=>{for(const t of e.addedNodes)this._recursiveProcess(t),this.clientNotified&&this.observer.disconnect()}))}}const u="AUTO_RUN_VIDEO_SITE",m="PING_CONTENT_AUTOPLAY_DETECTION",g=async(e,t,s,o)=>{try{chrome.tabs.sendMessage(o,{ipcId:e,command:t,...s},{},(()=>{chrome.runtime.lastError}))}catch(e){l.warn(`[broadcast] Unexpected error when calling command: "${t}", err: ${e.message}`)}},p=(e,t,s,o,n=null)=>{if(!chrome.tabs)throw new Error('"tabs" permission not set in manifest.');const i={};return"number"==typeof n&&(i.frameId=n),chrome.tabs.sendMessage(o,{ipcId:e,command:t,...s},i)},f=(e,t={},s)=>(async(e,t,s={},o={})=>{try{if(o?.tabId){const{tabId:n,frameId:i}=o;return await p(e,t,s,n,i)}if(o?.broadcast){const n=await chrome.tabs.query({}),{broadcastIgnoreId:i=[]}=o;return n.filter((({id:e})=>!i.includes(e))).forEach((({id:o})=>{g(e,t,s,o)})),!0}return await chrome.runtime.sendMessage({ipcId:e,command:t,...s})}catch(e){return l.warn(`Unexpected error when calling command: "${t}", err: ${e.message}`),null}})("WA",e,t,s);(new class extends d{constructor(){super(m)}autoRunVideo(e){f(u,{url:e})}main(){(new h).init((e=>this.autoRunVideo(e)))}}).main()})();
//# sourceMappingURL=../sourceMap/chrome/scripts/content_autoplay_detection.js.map